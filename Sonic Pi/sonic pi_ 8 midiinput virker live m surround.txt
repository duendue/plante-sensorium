use_real_time
#this is set up for close to live music output. The "sleep 1" in the bottumn creates a small delay, so every
#input recieved plays at the same time. This makes it possible for the pi to not play
# a note if it is feeling overwhelmed by data. :)


live_loop :midi_input do
  #input from midi is sent on two channels, like with osc. the first byte defines the channel
  #the second defines the value. Here the channel is called "cc" and the value "val"
  #The midi input is constantly synced.
  cc, val = sync "/midi:w-fader_w-fader_midi_1_28_0:1/control_change"
  #Within this with_fx transforms the input range (from 0 to 127) to a note (here called"pitch")
  # that is nice to listen to."pitch2" is used to play a chord. although it doesnt sound
  #very good at the moment
  #The audiolevel is adjusted for all channels.
  
  # surroundsound is made by specifying which specific speakers are used.
  # ":sound_out, output: 1" = front left. some audio leaks to the others.
  #(output: 2 = front right, output: 5 = back left, output: 6 = back right)
  
  with_fx :level, amp: 0.4 do
    pitch = (val / 127.0 * 20.0)+50
    pitch2 = pitch + 2
    octave = cc *5
    
    if cc == 3 #if channel 3 is recieved
      with_fx :sound_out, output: 1 do #play only on output 1
        use_synth :bass_foundation #with this synth
        play pitch, pitch2: octave, amp: 0.05 #with the pitch decided by value of input
      end
    end
    
    if cc == 4
      with_fx :sound_out, output: 2, output: 6 do #plays on front and back right
        use_synth :blade
        play pitch, pitch2: octave, amp: 0.1
      end
    end
    
    if cc == 5
      with_fx :sound_out, output: 5 do
        use_synth :chipbass
        play pitch, pitch2: octave, amp: 0.05
      end
    end
    
    if cc == 6
      with_fx :sound_out, output: 6 do
        use_synth :bass_foundation
        play pitch, pitch2: octave, amp: 0.05
      end
    end
    
    if cc == 7
      with_fx :sound_out, output: 5, output: 5 do
        use_synth :dull_bell
        play pitch, pitch2: octave, amp: 0.05
      end
    end
    if cc == 8
      with_fx :sound_out, output: 5 do
        use_synth :chiplead
        play pitch, pitch2: octave, amp: 0.05
      end
    end
    if cc == 9
      with_fx :sound_out, output: 2 do
        use_synth :dark_ambience
        play pitch, pitch2: octave, amp: 0.1
      end
    end
    if cc == 10
      with_fx :sound_out, output: 1 do
        use_synth :organ_tonewheel
        play pitch, pitch2: octave, amp: 0.05
      end
    end
    
    
    
    
    #    play pitch, pitch2: octave
  end
  
  
  sleep 1.0 / 8
end
